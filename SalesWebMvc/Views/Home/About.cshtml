@{
    ViewData["Title"] = "Sobre o Projeto";
}
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<div class="jumbotron text-center">
    <h3><strong>Sobre o Projeto</strong></h3>
    <p style="font-size: 16px">
        Projeto feito na conclusão do <a target="_blank" href="https://www.udemy.com/course/programacao-orientada-a-objetos-csharp/"> curso de C# COMPLETO</a>, utilizando  o Framework ASP.NET Core<br />
        no padrão de arquitetura de software MVC, separando a aplicação em 3 camadas.<br />
        A camada de interação do usuário(view), a camada de manipulação dos dados(model) e a camada de controle(controller).<br />
        Também foi usado o Entity Framework, como um mapeador relacional de objeto (O/RM), para mapear as entidades
        para relacionar no MySQL, e LINQ para manipulação da base de dados, HTML, CSS e Bootstrap 3 para personalização das Views<br />
    </p>
        <h3><strong>Além do Projeto</strong></h3>
        <p style="font-size: 18px">
            Neste projeto fui um pouco além do que o curso oferece, fiz um Dashboard com o <a target="_blank" href="https://www.chartjs.org/">Chart.js</a>,<br />
            uma biblioteca JavaScript de código aberto gratuita, para composição e visualização de dados das vendas.
        </p>
</div>

<div class="jumbotron text-center">
    <h3><strong>Sobre o Curso</strong></h3>
    <p style="font-size: 16px">
        Curso de programação Orientada a Objetos e desenvolvimento em<br />
        C#, .Net Core e ASP.Net, Conceitos Desde do básico, com exemplos bem simples e didáticos, <br />
        gradualmente avançando, até tópicos aprofundados tais como interfaces, Classes, Atributos, Métodos,<br />
        Membros estáticos, Polimorfismo, Enumerações e Composição, Construtores, Sobrecarga, Encapsulamento,<br />
        Comportamento de memória, Arrays, listas, Princípios SOLID, Padrões de projeto, Manipulação de arquivos,<br />
        Tratamento de Exceções, Generics, Expressões Lambda, Delegates, LINQ.

    </p>
</div>

